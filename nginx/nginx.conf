user  root;
worker_processes 1;

error_log  /logs/error.log warn;
pid        /var/run/nginx.pid;

events {
    use   epoll;             #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    worker_connections  1024;#单个后台worker process进程的最大并发链接数
    # multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format simple   '$remote_addr-$remote_user [$time_local] '
                        '$request_time ($upstream_response_time) '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    log_format detail   '$remote_addr-$remote_user [$time_local] '
                        '$request_time ($upstream_response_time) '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        '<"$request_body"'; # >"$resp_body"

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    client_header_timeout 120s;        #调大点
    client_body_timeout 120s;          #调大点
    client_max_body_size 100m;         #主要是这个参数，限制了上传文件大大小
    client_body_buffer_size 256k;

    keepalive_timeout 60;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    ################
    ##  口算批改   ##
    ################
    #upstream ks_object_detect_server {
    #    server 172.17.165.95:80;
    #}

    #upstream ks_ocr_server {
    #    server 172.17.165.95:80;
    #}

    #server {
    #    listen 6688 http2;
    #    server_name 127.0.0.1 localhost;
    #    charset     utf-8;
    #    access_log      /logs/ks_object_detect_access.log simple;
    #    error_log       /logs/ks_object_detect_error.log;
    #    client_max_body_size 75M;

    #    location / {
    #        grpc_pass grpc://ks_object_detect_server;
    #    }
    #}

    #server {
    #    listen 6689 http2;
    #    server_name 127.0.0.1 localhost;
    #    charset     utf-8;
    #    access_log      /logs/ks_ocr_access.log simple;
    #    error_log       /logs/ks_ocr_error.log;
    #    client_max_body_size 75M;

    #    location / {
    #        grpc_pass grpc://ks_ocr_server;
    #    }
    #}


    server {
        # 口算服务
        listen 80;
        listen 443;
        server_name  165.227.55.50;

        access_log      /logs/ks_app_access.log detail;
        error_log       /logs/ks_app_error.log;

        # lua_need_request_body on;

        # set $resp_body "";
        # body_filter_by_lua '
        #     local resp_body = string.sub(ngx.arg[1], 1, 1000)
        #     ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
        #     if ngx.arg[2] then
        #       ngx.var.resp_body = ngx.ctx.buffered
        #     end
        # ';


        #ssl_certificate /certificate/215038367270362.pem;
        #ssl_certificate_key /certificate/215038367270362.key;
        #ssl_session_timeout 5m;
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://165.227.55.50:8888;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    ################
    ##    主页    ##
    ################
    # www 跳转到没有前缀的
    #server {
    #    listen 443 ssl;
    #    server_name www.mathufo.com;
    #    rewrite ^(.*) https://mathufo.com$1 permanent;

    #    ssl_certificate /certificate/215038376630362.pem;
    #    ssl_certificate_key /certificate/215038376630362.key;
    #    ssl_session_timeout 5m;
    #    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #    ssl_prefer_server_ciphers on;
    #}

    # http 跳转到 https
    #server {
    #    listen       80;
    #    server_name  mathufo.com www.mathufo.com;
    #    rewrite ^(.*)$ https://mathufo.com$1 permanent;
    #}

    # 主页
    server {
        listen 8080;
        server_name  165.227.55.50;

        access_log      /logs/home_access.log;
        error_log       /logs/home_error.log;

        #ssl_certificate /certificate/215038376620362.pem;
        #ssl_certificate_key /certificate/215038376620362.key;
        #ssl_session_timeout 5m;
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_prefer_server_ciphers on;

        index index.html;
        root /web;
    }
}